.planning-wrapper {
  position: relative;
  overflow: hidden;
}

.planning-loading {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  background-color: rgba(255, 255, 255, 0.8);
  z-index: 10;
  text-align: center;
}

.planning-loading i {
  position: absolute;
  top: 50%;
}

.planning-table {
  table-layout: fixed;
  margin: 0;
  font-size: 10px;
  width: 100%;
  border-spacing: 0;
  border: 1px solid lightgrey;
  border-width: 0 1px 1px 0;
}

.planning-table * {
  box-sizing: border-box;
}

.planning-table tr, .planning-table td, .planning-table th {
  height: 20px;
  border: 1px solid lightgrey;
  border-width: 1px 0 0 1px;
  background-color: transparent;
}

.planning-table thead {
  display: block;
  width: 100%;
}

.planning-table thead tr {
  /* Remove the border on the top left empty cells */
}

.planning-table thead tr th {
  min-width: 20px;
  padding: 0;
  text-align: center;
  vertical-align: middle;
  /* Remove the border on the top left empty cells */
}

.planning-table thead tr th:first-child {
  border: 0;
}

.planning-table thead tr:first-child, .planning-table thead tr:first-child + tr, .planning-table thead tr:first-child + tr + tr {
  border: 0;
}

.planning-table thead tr .planning-day-hovered-cell {
  background-color: grey;
}

.planning-table tbody {
  display: block;
  width: 100%;
  overflow-x: hidden;
  height: 500px;
}

.planning-table tbody tr:hover th.planning-resources {
  background-color: grey;
}

.planning-table tr.planning-group-row {
  background: #f7f7f8;
  cursor: pointer;
}

.planning-table tr.planning-group-row td {
  border-width: 1px 0 0 0;
}

.planning-table tr.planning-group-row td:hover {
  background-color: #f7f7f8;
}

.planning-table tr.planning-group-row :nth-child(2) {
  border-width: 1px 0 0 1px;
}

.planning-table th.planning-resources {
  display: table;
  table-layout: fixed;
  width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-align: left;
}

.planning-table th.planning-resources .planning-resource-person {
  text-align: right;
  padding-right: 10px;
  cursor: pointer;
}

.planning-table td {
  min-width: 20px;
}

.planning-table td.planning-day-cell {
  padding: 0 0 0 0;
  cursor: pointer;
  position: relative;
}

.planning-table td.planning-day-cell:hover {
  background-color: grey;
}

.planning-table .planning-month {
  max-width: 20px;
  text-align: left;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  text-transform: capitalize;
}

.planning-table .planning-month span {
  position: relative;
  display: inline-block;
  padding-left: 5px;
}

.planning-table .planning-end-of-week-bar {
  position: absolute;
  top: 20px;
  width: 4px;
  height: 100%;
  margin-left: 18px;
  background-color: grey;
  z-index: 1;
}

.planning-table th.planning-today-cell {
  background-color: red;
}

.planning-table .planning-day-events {
  height: 100%;
  width: 100%;
}

.planning-table .planning-day-event {
  position: absolute;
  width: 100%;
  height: 100%;
  text-align: center;
  line-height: 20px;
}

.planning-table .planning-day-event i {
  font-size: 8px;
  position: relative;
}

@media print {
  .planning-wrapper, tbody {
    overflow: visible;
  }
  .planning-table {
    width: initial;
  }
  .planning-table tbody {
    max-height: initial !important;
    height: initial !important;
  }
  .planning-table th.planning-resources {
    width: 150px;
    padding: 0;
  }
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
